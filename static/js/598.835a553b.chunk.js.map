{"version":3,"file":"static/js/598.835a553b.chunk.js","mappings":"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","sources":["components/terminal/commands.js","components/terminal/index.js"],"sourcesContent":["const cmds = {\r\n    welcome: [\r\n        { text: <>Hi, my name is <strong>Oscar</strong></> },\r\n        { text: <>And I do web development</> },\r\n        { text: \"--------------------------------------------------------------\" },\r\n        { text: <>Type <i>help</i> for available commands or <i>exit</i> to close the terminal</> }\r\n    ],\r\n    error: [\r\n        {\r\n            text: \"Unrecognized command\",\r\n            classes: \"text-error\"\r\n        },\r\n        {\r\n            text: <>Type <i>help</i> for a list of available commands</>\r\n        }\r\n    ],\r\n    help: [\r\n        { text: <>Available commands</> },\r\n        { text: <>&emsp;- about: who am i? </> },\r\n        { text: <>&emsp;- blog: what I've written about? </> },\r\n        { text: <>&emsp;- projects: what I've made? </> },\r\n        { text: <>---------------------------------------------</> },\r\n        { text: <>&emsp;- clear: clears the screen </> },\r\n        { text: <>&emsp;- exit: closes the terminal </> },\r\n        { text: <>&emsp;- help: shows this menu </> },\r\n        { text: <>&emsp;- history: shows a history of used commands </> },\r\n        { text: <>&emsp;- theme: changes the theme </> },\r\n        { text: <></> },\r\n        { text: <>Use '&lt;command&gt; -h' to see help for any specific command</> },\r\n    ]\r\n}\r\n\r\nconst commands = (command, options) => {\r\n    return cmds[command] || cmds[\"error\"];\r\n}\r\n    \r\nexport default commands;\r\n    ","import { useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nimport commands from './commands';\r\n\r\nconst Terminal = ({ isOpen, setOpen, toggleTheme }) => {\r\n    const inputRef = useRef(null);\r\n    const isInitialzed = useRef(false);\r\n    const termRef = useRef(null);\r\n    const [ history, setHistory ] = useState([]);\r\n    const [ lines, setLines ] = useState([]);\r\n\r\n    const addLines = (lines) => {\r\n        lines.forEach((line, index) => {\r\n            setTimeout(() => {\r\n                setLines( l => [...l, line])\r\n                termRef?.current && termRef.current.scrollBy({top: termRef.current.scrollHeight, behavior: \"smooth\"});\r\n            }, 100 * index);\r\n        });\r\n    }\r\n\r\n    const runCommand = useCallback((command) => { \r\n        inputRef.current.value = \"\";\r\n        \r\n        setHistory(h => [...h, command]);\r\n        addLines([{ text: command, prefix: \">\", classes:\"text-success mt-2\" }]);\r\n\r\n        const [ cmd, opt ] = command.split(' ');\r\n\r\n        switch(cmd){\r\n            case \"exit\":\r\n                if(opt && opt === \"-h\") addLines([{ text: `Exits the terminal`}])\r\n                else if(opt && opt !== \"-h\") addLines([{ text: `Unrecognized opt ${opt}`}])\r\n                else setOpen(false);\r\n                break;\r\n            case \"clear\":\r\n                if(opt && opt === \"-h\") addLines([{ text: `Clears the screen`}])\r\n                else if(opt && opt !== \"-h\") addLines([{ text: `Unrecognized opt ${opt}`}])\r\n                else setLines([]);\r\n                break;\r\n            case \"history\":\r\n                if(opt && opt === \"-h\") addLines([\r\n                    { text: `Shows command history`},\r\n                    { text: `Usage: history <number> - runs command in given possition`}\r\n                ])\r\n                else if(opt && opt !== \"-h\" && isNaN(parseInt(opt))) addLines([{ text: `Unrecognized opt ${opt}`}])\r\n                else if(opt && !isNaN(parseInt(opt))) runCommand(history[parseInt(opt)])\r\n                else {\r\n                    let h = [];\r\n                    history.forEach( (e,i) => h.push({text: <>{i}. {e}</>}));\r\n                    addLines(h);\r\n                }\r\n                break;\r\n            case \"theme\":\r\n                const themes = [\"black\", \"white\", \"cyberpunk\"];\r\n                if(!themes.includes(opt)){\r\n                    opt && opt !== '-h' && addLines([{ text: `Unrecognized theme ${opt}`}]);\r\n                    addLines([\r\n                        { text: 'Usage: theme <theme_name>'},\r\n                        { text: `Valid themes are ${themes.join(', ')}`}\r\n                    ])\r\n                }\r\n                else {\r\n                    toggleTheme(opt);\r\n                    addLines([{ text: `Theme ${opt} set`}])\r\n                }\r\n                break;\r\n            default:         \r\n                addLines(commands(command));        \r\n                break;\r\n        }\r\n    }, [setOpen, history, toggleTheme])\r\n\r\n    useEffect(() => {        \r\n        const handleEnter = event => {\r\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n              event.preventDefault();            \r\n              runCommand(inputRef.current.value);\r\n            }\r\n        };\r\n\r\n        isOpen && inputRef.current.focus();\r\n        isOpen ? document.body.classList.add('overflow-hidden') : document.body.classList.remove('overflow-hidden');\r\n        isOpen ? document.addEventListener(\"keydown\", handleEnter) : document.removeEventListener(\"keydown\", handleEnter);\r\n        \r\n        if(isOpen && !isInitialzed.current){ \r\n            runCommand(\"welcome\");\r\n            isInitialzed.current = true;\r\n        }\r\n\r\n        return () => document.removeEventListener(\"keydown\", handleEnter);\r\n    }, [isOpen, runCommand]);\r\n    \r\n    return (\r\n        <div ref={termRef} onClick={ () => inputRef.current.focus() } className={`z-30 mockup-code fixed mx-4 sm:mx-16 my-16 pt-12 transition-all inset-0 duration-250 ease-in-out origin-bottom-right ${isOpen ? 'scale-1 translate-y-0 translate-x-0' : 'scale-0 translate-y-8 translate-x-8'} shadow-lg`}>\r\n            <div className=\"overflow-y-scroll h-full w-full\">\r\n                {\r\n                    lines.map( (line, index) => \r\n                        <pre className={ line.classes } key={index} data-prefix={line.prefix || \"\"}>\r\n                            <code className=\"inline-block whitespace-normal\tmax-w-full break-all pr-6\">{ line.text }</code>\r\n                        </pre>\r\n                    )\r\n                }\r\n                <pre className=\"mt-4 mb-2\" data-prefix=\"$\">\r\n                    <code className=\"inline-block whitespace-normal\tmax-w-full break-all pr-6\">\r\n                        <input aria-label=\"command prompt\" ref={ inputRef } className=\"input active:outline-transparent focus:outline-transparent bg-transparent border-none p-0 h-6 rounded-none\" type=\"text\" />\r\n                    </code>\r\n                </pre>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Terminal;"],"names":["cmds","welcome","text","error","classes","help","command","options","isOpen","setOpen","toggleTheme","inputRef","useRef","isInitialzed","termRef","useState","history","setHistory","lines","setLines","addLines","forEach","line","index","setTimeout","l","current","scrollBy","top","scrollHeight","behavior","runCommand","useCallback","value","h","prefix","split","cmd","opt","isNaN","parseInt","e","i","push","themes","includes","join","commands","useEffect","handleEnter","event","code","preventDefault","focus","document","body","classList","add","remove","addEventListener","removeEventListener","ref","onClick","className","map","type"],"sourceRoot":""}