{"version":3,"file":"static/js/442.84499a1f.chunk.js","mappings":"qLAEMA,EAAU,CACZ,CACIC,OAAQ,IACRC,MAAM,0CACNC,QAAS,gBAEb,CAAED,MAAM,mDAAiB,0CACzB,CAAEA,KAAM,4BACR,CAAEA,KAAM,kEACR,CAAEA,MAAM,yCAAO,gCAAP,+BAA6C,gCAA7C,8BA2DZ,UAxDiB,SAAC,GAAyB,IAAvBE,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAClBC,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAeD,EAAAA,EAAAA,SAAO,GAC5B,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAQC,EAAR,KAAeC,EAAf,KAEMC,EAAW,SAACF,GACdA,EAAMG,SAAQ,SAACC,EAAMC,GACjBC,YAAW,WACPL,GAAU,SAAAM,GAAC,wBAAQA,GAAR,CAAWH,GAAX,GACd,GAAE,IAAMC,EACZ,GACJ,EA+BD,OA7BAG,EAAAA,EAAAA,YAAU,WACNd,GAAUE,EAASa,QAAQC,QAC3BhB,EAASiB,SAASC,KAAKC,UAAUC,IAAI,mBAAqBH,SAASC,KAAKC,UAAUE,OAAO,mBACtFrB,IAAWI,EAAaW,UACvBP,EAASZ,GACTQ,EAAaW,SAAU,EAE9B,GAAE,CAACf,KAEJc,EAAAA,EAAAA,YAAU,WACN,IAAMQ,EAAc,SAAAC,GAClB,GAAmB,UAAfA,EAAMC,MAAmC,gBAAfD,EAAMC,KAAwB,CAI1D,GAHAC,QAAQC,IAAI,6CACZH,EAAMI,iBAEwB,SAA3BzB,EAASa,QAAQa,MAEhB,YADA3B,GAAQ,GAGZO,EAAS,CAAC,CAAEV,KAAMI,EAASa,QAAQa,MAAO/B,OAAQ,IAAKE,QAAQ,uBAC/DG,EAASa,QAAQa,MAAQ,EAC1B,CACF,EAED,OADAX,SAASY,iBAAiB,UAAWP,GAC9B,WACLL,SAASa,oBAAoB,UAAWR,EACzC,CACJ,GAAE,KAGC,iBAAKS,QAAU,kBAAM7B,EAASa,QAAQC,OAAvB,EAAiCgB,UAAS,oHAA+GhC,EAAS,sCAAwC,sCAAhK,cAAzD,UAEQM,EAAM2B,KAAK,SAACvB,EAAMC,GAAP,OAAiB,gBAAKqB,UAAYtB,EAAKX,QAAsB,cAAaW,EAAKb,QAAU,GAAxE,UAA4E,0BAAQa,EAAKZ,QAApDa,EAAtD,KAEf,gBAAKqB,UAAU,OAAO,cAAY,IAAlC,UACI,2BACI,kBAAO,aAAW,iBAAiBE,IAAMhC,EAAW8B,UAAU,6GAA6GG,KAAK,eAKnM,C","sources":["components/terminal/index.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\n\r\nconst welcome = [\r\n    {   \r\n        prefix: \">\",\r\n        text: <>Welcome</>,\r\n        classes: \"text-success\"\r\n    },\r\n    { text: <>Hi, my name is <strong>Oscar</strong></> },\r\n    { text: \"And I do web development\" },\r\n    { text: \"--------------------------------------------------------------\" },\r\n    { text: <>Type <i>help</i> for available commands or <i>exit</i> to close the terminal</> }\r\n]\r\n\r\nconst Terminal = ({ isOpen, setOpen }) => {\r\n    const inputRef = useRef(null);\r\n    const isInitialzed = useRef(false);\r\n    const [ lines, setLines ] = useState([]);\r\n\r\n    const addLines = (lines) => {\r\n        lines.forEach((line, index) => {\r\n            setTimeout(() => {\r\n                setLines( l => [...l, line])\r\n            }, 100 * index);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        isOpen && inputRef.current.focus();\r\n        isOpen ? document.body.classList.add('overflow-hidden') : document.body.classList.remove('overflow-hidden');\r\n        if(isOpen && !isInitialzed.current){ \r\n            addLines(welcome);\r\n            isInitialzed.current = true;\r\n        }\r\n    }, [isOpen]);\r\n\r\n    useEffect(() => {\r\n        const handleEnter = event => {\r\n          if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n            console.log(\"Enter key was pressed. Run your function.\");\r\n            event.preventDefault();\r\n\r\n            if(inputRef.current.value === \"exit\"){\r\n                setOpen(false);\r\n                return;\r\n            }\r\n            addLines([{ text: inputRef.current.value, prefix: \">\", classes:\"text-success mt-2\" }])\r\n            inputRef.current.value = \"\";\r\n          }\r\n        };\r\n        document.addEventListener(\"keydown\", handleEnter);\r\n        return () => {\r\n          document.removeEventListener(\"keydown\", handleEnter);\r\n        };\r\n    }, []);\r\n    \r\n    return (\r\n        <div onClick={ () => inputRef.current.focus() } className={`mockup-code fixed mx-4 sm:mx-16 my-16 transition-all inset-0 duration-250 ease-in-out origin-bottom-right ${isOpen ? 'scale-1 translate-y-0 translate-x-0' : 'scale-0 translate-y-8 translate-x-8'} shadow-lg`}>\r\n            {\r\n                lines.map( (line, index) => <pre className={ line.classes } key={index} data-prefix={line.prefix || \"\"}><code>{ line.text }</code></pre> )\r\n            }\r\n            <pre className=\"mt-4\" data-prefix=\"$\">\r\n                <code>\r\n                    <input aria-label=\"command prompt\" ref={ inputRef } className=\"input active:outline-transparent focus:outline-transparent bg-transparent border-none p-0 h-6 rounded-none\" type=\"text\" />\r\n                </code>\r\n            </pre>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Terminal;"],"names":["welcome","prefix","text","classes","isOpen","setOpen","inputRef","useRef","isInitialzed","useState","lines","setLines","addLines","forEach","line","index","setTimeout","l","useEffect","current","focus","document","body","classList","add","remove","handleEnter","event","code","console","log","preventDefault","value","addEventListener","removeEventListener","onClick","className","map","ref","type"],"sourceRoot":""}