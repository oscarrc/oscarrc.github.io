{"version":3,"file":"static/js/9.ed863424.chunk.js","mappings":"0MAGMA,EAAI,yCAAG,WAAOC,EAAaC,GAApB,mFACHC,EAAO,CACT,CAAEC,KAAK,2CACP,CAAEA,KAAK,sBACP,CAAEA,KAAK,oDACP,CAAEA,MAAM,yCAAO,qCAAP,2BAENC,EAAW,CACb,CAAED,KAAK,kBAAD,OAAoBF,EAAQ,GAA5B,qBACN,CAAEE,MAAM,yCAAO,qCAAP,2CAGNE,EAZG,yCAYS,WAAOC,GAAP,4FACKN,EAAYO,WAAW,CAAC,OAAQD,IAAW,kBAAME,EAAAA,EAAAA,IAAQC,EAAAA,EAAAA,KAAaA,EAAAA,EAAAA,KAAa,WAAYH,EAApD,IADhD,WACRI,EADQ,UAEFA,EAAKC,SAAS,OAFZ,yCAE2BP,GAF3B,gCAGPM,EAAKE,MAAM,MAAMC,KAAI,SAAAC,GAAC,MAAK,CAAEX,KAAMW,EAAb,KAHf,2CAZT,wDAkBNb,EAAQc,OAAS,GAAoB,OAAfd,EAAQ,IAAiC,MAAlBA,EAAQ,GAAG,IAlBlD,4DAoBIA,EAAQc,OAAS,GAAoB,OAAfd,EAAQ,KAAgB,CAAC,CAAEE,KAAK,wBAAD,OAA0BF,EAAQe,KAAK,MAAQC,QAAS,gBAC/Gf,IArBF,uBAyBIG,EAAUJ,EAAQ,IAzBtB,mFAAH,wDA4BV,W","sources":["components/terminal/post.js"],"sourcesContent":["import config from \"../../config/github\";\r\nimport { getFile } from \"../../lib/github\";\r\n\r\nconst post = async (queryClient, options) => { \r\n    const help = [\r\n        { text: `Retrieves and shows the specified post.`},\r\n        { text: `Usage: post <slug>`},\r\n        { text: `Use 'ls posts' to get a list of available slugs.`},        \r\n        { text: <>Use '<em>posts -h</em>' to show this help</> }\r\n    ];\r\n    const notFound = [\r\n        { text: `Post with slug ${options[0]} does not exist.`},\r\n        { text: <>Use '<em>ls posts</em>' to get a list of available slugs.</>}\r\n    ];\r\n\r\n    const parseFile = async (filename) => {\r\n        const file = await queryClient.fetchQuery([\"post\", filename], () => getFile(config.user, config.repo, \"gh-posts\", filename));\r\n        if(!file || file.includes(\"404\")) return notFound;\r\n        return file.split(\"\\n\").map(l => ({ text: l }))\r\n    }\r\n\r\n    if(options.length > 1 || options[0] === \"-h\" || options[0][0] === \"-\"){\r\n        return [\r\n            ...((options.length > 1 || options[0] !== \"-h\") && [{ text: `Unrecoginized option ${options.join(\" \")}`, classes: \"text-error\" }]),\r\n            ...help\r\n        ];\r\n    }\r\n\r\n    return await parseFile(options[0]);\r\n}\r\n\r\nexport default post;"],"names":["post","queryClient","options","help","text","notFound","parseFile","filename","fetchQuery","getFile","config","file","includes","split","map","l","length","join","classes"],"sourceRoot":""}