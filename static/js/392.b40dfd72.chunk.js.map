{"version":3,"file":"static/js/392.b40dfd72.chunk.js","mappings":"2NAwBA,EAxBiB,CACbA,QAAS,CACL,CAAEC,MAAM,mDAAiB,0CACzB,CAAEA,MAAM,4DACR,CAAEA,KAAM,kEACR,CAAEA,MAAM,yCAAO,gCAAP,+BAA6C,gCAA7C,8BAEZC,MAAO,CACH,CACID,KAAM,uBACNE,QAAS,cAEb,CACIF,MAAM,yCAAO,gCAAP,yCAGdG,KAAM,CACF,CAAEH,MAAM,sDACR,CAAEA,MAAM,4EACR,CAAEA,MAAM,6EACR,CAAEA,MAAM,2ECuDhB,EAvEiB,SAAC,GAAyB,IAAvBI,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAClBC,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAeD,EAAAA,EAAAA,SAAO,GAC5B,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAQC,EAAR,KAAeC,EAAf,KAEMC,EAAW,SAACF,GACdA,EAAMG,SAAQ,SAACC,EAAMC,GACjBC,YAAW,WACPL,GAAU,SAAAM,GAAC,wBAAQA,GAAR,CAAWH,GAAX,GACd,GAAE,IAAMC,EACZ,GACJ,EAEKG,GAAaC,EAAAA,EAAAA,cAAY,SAACC,GAG5B,OAFAd,EAASe,QAAQC,MAAQ,GAElBF,GACH,IAAK,OAED,YADAf,GAAQ,GAEZ,IAAK,QAED,YADAM,EAAS,IAMjBC,EAAS,CAAC,CAAEZ,KAAMoB,EAASG,OAAQ,IAAKrB,QAAQ,uBAOhDU,EALIY,EAASJ,GAKJI,EAASJ,GAJLI,EAAAA,MAKhB,GAAE,CAACnB,IAsBJ,OApBAoB,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAc,SAAAC,GACG,UAAfA,EAAMC,MAAmC,gBAAfD,EAAMC,OAClCD,EAAME,iBACNX,EAAWZ,EAASe,QAAQC,OAEjC,EAWD,OATAlB,GAAUE,EAASe,QAAQS,QAC3B1B,EAAS2B,SAASC,KAAKC,UAAUC,IAAI,mBAAqBH,SAASC,KAAKC,UAAUE,OAAO,mBACzF/B,EAAS2B,SAASK,iBAAiB,UAAWV,GAAeK,SAASM,oBAAoB,UAAWX,GAElGtB,IAAWI,EAAaa,UACvBH,EAAW,WACXV,EAAaa,SAAU,GAGpB,kBAAMU,SAASM,oBAAoB,UAAWX,EAA9C,CACV,GAAE,CAACtB,EAAQc,KAGR,iBAAKoB,QAAU,kBAAMhC,EAASe,QAAQS,OAAvB,EAAiCS,UAAS,oHAA+GnC,EAAS,sCAAwC,sCAAhK,cAAzD,UAEQM,EAAM8B,KAAK,SAAC1B,EAAMC,GAAP,OAAiB,gBAAKwB,UAAYzB,EAAKZ,QAAsB,cAAaY,EAAKS,QAAU,GAAxE,UAA4E,0BAAQT,EAAKd,QAApDe,EAAtD,KAEf,gBAAKwB,UAAU,OAAO,cAAY,IAAlC,UACI,2BACI,kBAAO,aAAW,iBAAiBE,IAAMnC,EAAWiC,UAAU,6GAA6GG,KAAK,eAKnM,C","sources":["config/commands.js","components/terminal/index.js"],"sourcesContent":["const commands = {\r\n    welcome: [\r\n        { text: <>Hi, my name is <strong>Oscar</strong></> },\r\n        { text: <>And I do web development</> },\r\n        { text: \"--------------------------------------------------------------\" },\r\n        { text: <>Type <i>help</i> for available commands or <i>exit</i> to close the terminal</> }\r\n    ],\r\n    error: [\r\n        {\r\n            text: \"Unrecognized command\",\r\n            classes: \"text-error\"\r\n        },\r\n        {\r\n            text: <>Type <i>help</i> for a list of available commands</>\r\n        }\r\n    ],\r\n    help: [\r\n        { text: <>Available commands</> },\r\n        { text: <>&emsp; - clear &emsp; clears the screen </> },\r\n        { text: <>&emsp; - exit &emsp; closes the terminal </> },\r\n        { text: <>&emsp; - help &emsp; shows this menu </> }\r\n    ]\r\n}\r\n\r\nexport default commands;\r\n    ","import { useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nimport commands from '../../config/commands';\r\n\r\nconst Terminal = ({ isOpen, setOpen }) => {\r\n    const inputRef = useRef(null);\r\n    const isInitialzed = useRef(false);\r\n    const [ lines, setLines ] = useState([]);\r\n\r\n    const addLines = (lines) => {\r\n        lines.forEach((line, index) => {\r\n            setTimeout(() => {\r\n                setLines( l => [...l, line])\r\n            }, 100 * index);\r\n        });\r\n    }\r\n\r\n    const runCommand = useCallback((command) => { \r\n        inputRef.current.value = \"\";\r\n            \r\n        switch(command){\r\n            case \"exit\":\r\n                setOpen(false);\r\n                return\r\n            case \"clear\":\r\n                setLines([]);\r\n                return\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        addLines([{ text: command, prefix: \">\", classes:\"text-success mt-2\" }]);\r\n\r\n        if(!commands[command]){\r\n            addLines(commands.error);\r\n            return;\r\n        }\r\n        \r\n        addLines(commands[command]);        \r\n    }, [setOpen])\r\n\r\n    useEffect(() => {        \r\n        const handleEnter = event => {\r\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n              event.preventDefault();            \r\n              runCommand(inputRef.current.value);\r\n            }\r\n        };\r\n\r\n        isOpen && inputRef.current.focus();\r\n        isOpen ? document.body.classList.add('overflow-hidden') : document.body.classList.remove('overflow-hidden');\r\n        isOpen ? document.addEventListener(\"keydown\", handleEnter) : document.removeEventListener(\"keydown\", handleEnter);\r\n        \r\n        if(isOpen && !isInitialzed.current){ \r\n            runCommand(\"welcome\");\r\n            isInitialzed.current = true;\r\n        }\r\n\r\n        return () => document.removeEventListener(\"keydown\", handleEnter);\r\n    }, [isOpen, runCommand]);\r\n    \r\n    return (\r\n        <div onClick={ () => inputRef.current.focus() } className={`mockup-code fixed mx-4 sm:mx-16 my-16 transition-all inset-0 duration-250 ease-in-out origin-bottom-right ${isOpen ? 'scale-1 translate-y-0 translate-x-0' : 'scale-0 translate-y-8 translate-x-8'} shadow-lg`}>\r\n            {\r\n                lines.map( (line, index) => <pre className={ line.classes } key={index} data-prefix={line.prefix || \"\"}><code>{ line.text }</code></pre> )\r\n            }\r\n            <pre className=\"mt-4\" data-prefix=\"$\">\r\n                <code>\r\n                    <input aria-label=\"command prompt\" ref={ inputRef } className=\"input active:outline-transparent focus:outline-transparent bg-transparent border-none p-0 h-6 rounded-none\" type=\"text\" />\r\n                </code>\r\n            </pre>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Terminal;"],"names":["welcome","text","error","classes","help","isOpen","setOpen","inputRef","useRef","isInitialzed","useState","lines","setLines","addLines","forEach","line","index","setTimeout","l","runCommand","useCallback","command","current","value","prefix","commands","useEffect","handleEnter","event","code","preventDefault","focus","document","body","classList","add","remove","addEventListener","removeEventListener","onClick","className","map","ref","type"],"sourceRoot":""}