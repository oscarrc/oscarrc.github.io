{"version":3,"file":"static/js/743.fee8c4cc.chunk.js","mappings":"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","sources":["components/projects/ProjectCard.js","components/projects/index.js","config/github.js","hooks/useGithub.js","hooks/useMdx.js","views/Portfolio.js"],"sourcesContent":["import { AiFillStar, AiOutlineClose, AiOutlineEye, AiOutlineFork } from 'react-icons/ai';\r\nimport { useCallback, useEffect } from 'react';\r\n\r\nimport { FiExternalLink } from 'react-icons/fi';\r\nimport { SiGithub } from 'react-icons/si';\r\n\r\nconst ProjectCard = ({ project, maximized, onClick, onClose }) => {\r\n    const Content = project.default;\r\n\r\n    const closeWindow = useCallback((event) => {\r\n        if( event.key === \"Escape\" || event.currentTarget.ariaLabel === \"close\"){\r\n            onClose && onClose();\r\n        }\r\n    }, [onClose])\r\n\r\n    const maximizeWindow = () => onClick && onClick();\r\n\r\n    useEffect(() => {\r\n        maximized && document.addEventListener(\"keydown\", closeWindow, false);\r\n        maximized && document.body.classList.add(\"overflow-hidden\");\r\n        \r\n        return () =>  {\r\n            document.removeEventListener(\"keydown\", closeWindow, false)\r\n            document.body.classList.remove(\"overflow-hidden\")\r\n        };\r\n    }, [closeWindow, maximized])\r\n    \r\n    return (\r\n        <div onClick={ maximizeWindow } className={`transition-all transition-500 ease-in-out mockup-code ${maximized ? 'maximized' : ''}`}>\r\n            <label className=\"bg-secondary pl-2 text-neutral truncate\">{ `${project.title}${maximized ? ` | ${project.description}` : '' }` }</label>\r\n            { maximized && <button aria-label=\"close\" onClick={closeWindow} className=\"absolute right-3 top-4 hover:text-accent\"><AiOutlineClose className=\"h-4 w-4\" /></button> }\r\n            <div className={`card border-t border-t-base-100 relative h-full scroll ${maximized ? 'overflow-y-scroll' : 'aspect-video'}`}>\r\n                <figure className=\"h-full w-full\">\r\n                    <img className=\"object-cover h-full w-full\" src={ project.image } alt={ project.title } />\r\n                </figure>\r\n                { maximized && \r\n                    <div className=\"card-body px-12 md:px-16 items-center\">\r\n                        <div className=\"max-w-full prose pt-8 pb-16\">\r\n                            <Content />\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <div className=\"info\">\r\n                    <div className=\"flex flex-1 gap-2\">\r\n                        { maximized && project.tags.split(',').map(tag => <span key={tag} className=\"badge truncate\">{ tag }</span> )}\r\n                    </div>\r\n                    <div className=\"flex py-1 px-2 bg-neutral/75 gap-2\">\r\n                        <span className=\"flex items-center gap-1\"><AiFillStar /> { project.info.stargazers_count }</span>\r\n                        <span className=\"flex items-center gap-1\"><AiOutlineEye /> { project.info.subscribers_count }</span>\r\n                        <span className=\"flex items-center gap-1\"><AiOutlineFork /> { project.info.forks_count }</span>\r\n                        <span className=\"divider divider-horizontal mx-0\"></span>\r\n                        <div className=\"flex items-center gap-4\">\r\n                            <a aria-label=\"Github page\" onClick={ e => e.stopPropagation() } target=\"_BLANK\" rel=\"noreferrer noopener\" href={ project.info.html_url }><SiGithub /></a>                 \r\n                            <a aria-label=\"Visit site\" onClick={ e => e.stopPropagation() } target=\"_BLANK\" rel=\"noreferrer noopener\" href={ project.link }><FiExternalLink /></a> \r\n                        </div> \r\n                    </div>                              \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectCard","import { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nimport ProjectCard from './ProjectCard';\r\nimport config from \"../../config/github\"\r\nimport useGithub from \"../../hooks/useGithub\";\r\nimport useMDX from \"../../hooks/useMdx\";\r\n\r\nconst Projects = ({ page=0, limit=10 }) => {\r\n    const { getFiles, getRepoInfo, getMedia } = useGithub(config.user, config.repo);\r\n    const { parseMDX } = useMDX();\r\n    const { pathname } = useLocation();\r\n    const navigate = useNavigate();\r\n    \r\n    const [ projects, setProjects ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getFiles(config.repo, \"gh-projects\", page, limit).then( async (projects) => {\r\n            const parsed = await Promise.all(projects.map(async p => {\r\n                const evaluated = await parseMDX(p);\r\n                evaluated.info = await getRepoInfo(evaluated.repo);\r\n                evaluated.image = await getMedia(evaluated.image, \"gh-projects\");\r\n                return evaluated;\r\n            }))   \r\n\r\n            setProjects(p => [...p, ...parsed])\r\n        } );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [page])\r\n\r\n    return (\r\n        <div className=\"w-three-quarter mx-auto grid grid-cols grid-cols-1 sm:grid-cols-2 xl:grid-cols-3 items-center justify-center gap-8\">\r\n            { projects && projects.map( (project, index) => {\r\n                return <ProjectCard \r\n                            key={index}\r\n                            project={ project }\r\n                            maximized={ pathname === `/portfolio/${project.slug}` } \r\n                            onClick={ () => navigate(`/portfolio/${project.slug}`, { state: { background: pathname }})}\r\n                            onClose={ () => { navigate(-1) } }\r\n                        />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects","const config = {\r\n    user: \"oscarrc\",\r\n    repo: \"oscarrc.github.io\"\r\n}\r\n\r\nexport default config;","import { useCallback } from \"react\";\r\n\r\nconst useGithub = (user, repo) => {\r\n    const baseUrl = `https://api.github.com/repos`;\r\n\r\n    const getFiles = useCallback(async (repo, branch, page, limit = 10) => {\r\n        const files = await fetch(`${baseUrl}/${user}/${repo}/contents?ref=${branch}`)\r\n                            .then( async res => {\r\n                                const temp = await res.json();\r\n                                return temp.filter(i => i.type !== \"dir\" && i.name.substring(i.name.length - 4) === \".mdx\")\r\n                            });\r\n                            \r\n        const pageFiles = files.slice(page, (page + 1)*limit);\r\n        \r\n        const result = await Promise.all(pageFiles.map( async (file) => {\r\n            return await fetch(file.download_url).then( async (res) => await res.text()); \r\n        }));\r\n        \r\n        return result;\r\n    }, [baseUrl, user])\r\n\r\n    const getMedia = (media, branch) => {\r\n        return `https://raw.githubusercontent.com/oscarrc/${repo}/${branch}/${media}`\r\n    }\r\n    \r\n    const getRepoInfo = async (repo) => {\r\n        return await fetch(`https://api.github.com/repos/${user}/${repo}`).then( res => res.json())\r\n    }\r\n\r\n    return {\r\n        getRepoInfo,\r\n        getFiles,\r\n        getMedia\r\n    }\r\n}\r\n\r\nexport default useGithub;","import * as runtime from \"react/jsx-runtime\";\r\n\r\nimport { evaluate } from \"@mdx-js/mdx\";\r\nimport remarkFrontmatter from 'remark-frontmatter';\r\nimport remarkMdxFrontmatter from 'remark-mdx-frontmatter';\r\n\r\nconst useMDX = () => {\r\n  const parseMDX = async (data) => {\r\n    const evaluated = await evaluate(data, { ...runtime, remarkPlugins: [remarkFrontmatter, remarkMdxFrontmatter] });\r\n    return evaluated;\r\n  }\r\n\r\n  return { parseMDX }\r\n}\r\n\r\nexport default useMDX;","import Projects from \"../components/projects\";\r\nimport { useState } from \"react\";\r\n\r\nconst Portfolio = () => {\r\n    const [ page, setPage ] = useState(0);    \r\n\r\n    return (\r\n        <section id=\"projects\" className=\"flex flex-col justify-center items-center min-h-view\">\r\n            <Projects page={ page } />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Portfolio;"],"names":["project","maximized","onClick","onClose","Content","default","closeWindow","useCallback","event","key","currentTarget","ariaLabel","useEffect","document","addEventListener","body","classList","add","removeEventListener","remove","className","title","description","src","image","alt","tags","split","map","tag","info","stargazers_count","subscribers_count","forks_count","e","stopPropagation","target","rel","href","html_url","link","page","limit","useGithub","config","getFiles","getRepoInfo","getMedia","parseMDX","useMDX","pathname","useLocation","navigate","useNavigate","useState","projects","setProjects","then","Promise","all","p","evaluated","repo","parsed","index","slug","state","background","user","baseUrl","branch","fetch","res","json","temp","filter","i","type","name","substring","length","files","pageFiles","slice","file","download_url","text","result","media","data","evaluate","runtime","remarkPlugins","remarkFrontmatter","remarkMdxFrontmatter","id"],"sourceRoot":""}