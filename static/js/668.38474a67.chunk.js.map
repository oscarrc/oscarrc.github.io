{"version":3,"file":"static/js/668.38474a67.chunk.js","mappings":"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","sources":["components/posts/PostCard.js","components/posts/index.js","config/github.js","hooks/useGithub.js","hooks/useMdx.js","views/Blog.js"],"sourcesContent":["import { AiOutlineCalendar } from 'react-icons/ai';\r\nimport { IoIosTimer } from 'react-icons/io';\r\n\r\nconst PostCard = ({ title, excerpt, image, date, onClick }) => {\r\n    return (\r\n        <div role=\"button\" onClick={ onClick } className=\"card card-side pointer w-full\">\r\n            <div className=\"hidden sm:flex\">\r\n                <figure className=\"w-40 h-40 aspect-square hidden md:flex overflow-hidden\">\r\n                    <img className=\"object-cover h-full w-full\" src={image} alt={`${title}`} />\r\n                </figure>\r\n            </div>\r\n            <div className=\"card-body gap-4 p-0 pl-0 sm:pl-8\">\r\n                <div className=\"card-content flex-1\">\r\n                    <h2 className=\"card-title\">{ title }</h2>\r\n                    <p className=\"line-clamp-4\">{ excerpt }</p>\r\n                </div>                    \r\n                <div className=\"card-actions justify-end\">\r\n                    <span className=\"flex items-center gap-1\"><AiOutlineCalendar /> { date }</span>\r\n                    <span className=\"divider divider-horizontal mx-0\"></span>                    \r\n                    <span className=\"flex items-center gap-1\"><IoIosTimer /> 5 min</span>                                       \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostCard","import { useEffect, useState } from \"react\";\r\n\r\nimport PostCard from \"./PostCard\";\r\nimport config from \"../../config/github\"\r\nimport useGithub from \"../../hooks/useGithub\";\r\nimport useMDX from \"../../hooks/useMdx\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Posts = ({ page = 0, limit = 10 }) => {\r\n    const { getFiles, getMedia } = useGithub(config.user, config.repo);\r\n    const { parseMDX } = useMDX();\r\n    const [ posts, setPosts ] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        getFiles(config.repo, \"gh-posts\", page, limit).then( async (projects) => {\r\n            const parsed = await Promise.all(projects.map(async p => {\r\n                const evaluated = await parseMDX(p);\r\n                evaluated.image = await getMedia(evaluated.image, \"gh-posts\");\r\n                return evaluated;\r\n            }))\r\n\r\n            setPosts(p => [...p, ...parsed])\r\n        } );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [page])\r\n\r\n    return (\r\n        <div className=\"flex w-three-quarter flex-col mx-auto gap-8\">\r\n            { posts && posts.map( (post, index) => {\r\n                return (\r\n                    <div key={post.title}>\r\n                        <PostCard \r\n                            title={post.title}\r\n                            excerpt={post.excerpt}                   \r\n                            image={post.image}\r\n                            date={post.date}\r\n                            onClick={ () => navigate(`/blog/${post.slug}`, { state: { post: post }} ) }\r\n                        />\r\n                        { index < posts.length && <span className=\"divider flex sm:hidden m-0\"></span> }\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts;","const config = {\r\n    user: \"oscarrc\",\r\n    repo: \"oscarrc.github.io\"\r\n}\r\n\r\nexport default config;","import { useCallback } from \"react\";\r\n\r\nconst useGithub = (user, repo) => {\r\n    const baseUrl = `https://api.github.com/repos`;\r\n\r\n    const getFiles = useCallback(async (repo, branch, page, limit = 10) => {\r\n        const files = await fetch(`${baseUrl}/${user}/${repo}/contents?ref=${branch}`)\r\n                            .then( async res => {\r\n                                const temp = await res.json();\r\n                                return temp.filter(i => i.type !== \"dir\" && i.name.substring(i.name.length - 4) === \".mdx\")\r\n                            });\r\n                            \r\n        const pageFiles = files.slice(page, (page + 1)*limit);\r\n        \r\n        const result = await Promise.all(pageFiles.map( async (file) => {\r\n            return await fetch(file.download_url).then( async (res) => await res.text()); \r\n        }));\r\n        \r\n        return result;\r\n    }, [baseUrl, user])\r\n\r\n    const getMedia = (media, branch) => {\r\n        return `https://raw.githubusercontent.com/oscarrc/${repo}/${branch}/${media}`\r\n    }\r\n    \r\n    const getRepoInfo = async (repo) => {\r\n        return await fetch(`https://api.github.com/repos/${user}/${repo}`).then( res => res.json())\r\n    }\r\n\r\n    return {\r\n        getRepoInfo,\r\n        getFiles,\r\n        getMedia\r\n    }\r\n}\r\n\r\nexport default useGithub;","import * as runtime from \"react/jsx-runtime\";\r\n\r\nimport { evaluate } from \"@mdx-js/mdx\";\r\nimport remarkFrontmatter from 'remark-frontmatter';\r\nimport remarkMdxFrontmatter from 'remark-mdx-frontmatter';\r\n\r\nconst useMDX = () => {\r\n  const parseMDX = async (data) => {\r\n    const evaluated = await evaluate(data, { ...runtime, remarkPlugins: [remarkFrontmatter, remarkMdxFrontmatter] });\r\n    return evaluated;\r\n  }\r\n\r\n  return { parseMDX }\r\n}\r\n\r\nexport default useMDX;","import Posts from \"../components/posts\";\r\nimport { useState } from \"react\";\r\n\r\nconst Blog = () => {\r\n    const [ page, setPage ] = useState(0);\r\n\r\n    return (\r\n        <section id=\"blog\" className=\"flex flex-col justify-center items-center min-h-view\">                \r\n            <Posts />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Blog;"],"names":["title","excerpt","image","date","onClick","role","className","src","alt","page","limit","useGithub","config","getFiles","getMedia","parseMDX","useMDX","useState","posts","setPosts","navigate","useNavigate","useEffect","then","projects","Promise","all","map","p","evaluated","parsed","post","index","slug","state","length","user","repo","baseUrl","useCallback","branch","fetch","res","json","temp","filter","i","type","name","substring","files","pageFiles","slice","file","download_url","text","result","getRepoInfo","media","data","evaluate","runtime","remarkPlugins","remarkFrontmatter","remarkMdxFrontmatter","id"],"sourceRoot":""}