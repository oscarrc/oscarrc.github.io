{"version":3,"file":"static/js/598.524127dd.chunk.js","mappings":"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","sources":["components/terminal/commands.js","components/terminal/index.js"],"sourcesContent":["const cmds = {\r\n    welcome: [\r\n        { text: <>Hi, my name is <strong>Oscar</strong></> },\r\n        { text: <>And I do web development</> },\r\n        { text: \"--------------------------------------------------------------\" },\r\n        { text: <>Type <i>help</i> for available commands or <i>exit</i> to close the terminal</> }\r\n    ],\r\n    error: [\r\n        {\r\n            text: \"Unrecognized command\",\r\n            classes: \"text-error\"\r\n        },\r\n        {\r\n            text: <>Type <i>help</i> for a list of available commands</>\r\n        }\r\n    ],\r\n    help: [\r\n        { text: <>Available commands</> },\r\n        { text: <>&emsp; - clear &emsp;&emsp; clears the screen </> },\r\n        { text: <>&emsp; - exit &emsp;&emsp; closes the terminal </> },\r\n        { text: <>&emsp; - help &emsp;&emsp; shows this menu </> },\r\n        { text: <>&emsp; - history &emsp;&emsp; shows a history of used commands </> }\r\n    ]\r\n}\r\n\r\nconst commands = (command, options) => {\r\n    return cmds[command] || cmds[\"error\"];\r\n}\r\n    \r\nexport default commands;\r\n    ","import { useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nimport commands from './commands';\r\n\r\nconst Terminal = ({ isOpen, setOpen }) => {\r\n    const inputRef = useRef(null);\r\n    const isInitialzed = useRef(false);\r\n    const termRef = useRef(null);\r\n    const [ history, setHistory ] = useState([]);\r\n    const [ lines, setLines ] = useState([]);\r\n\r\n    const addLines = (lines) => {\r\n        lines.forEach((line, index) => {\r\n            setTimeout(() => {\r\n                setLines( l => [...l, line])\r\n                termRef?.current && termRef.current.scrollBy({top: termRef.current.scrollHeight, behavior: \"smooth\"});\r\n            }, 100 * index);\r\n        });\r\n    }\r\n\r\n    const runCommand = useCallback((command) => { \r\n        inputRef.current.value = \"\";\r\n        \r\n        setHistory(h => [...h, command]);\r\n\r\n        switch(command){\r\n            case \"exit\":\r\n                setOpen(false);\r\n                break;\r\n            case \"clear\":\r\n                setLines([]);\r\n                break;\r\n            case \"history\":\r\n                addLines([{ text: command, prefix: \">\", classes:\"text-success mt-2\" }]);\r\n                let h = [];\r\n                history.forEach( (e,i) => h.push({text: <>{i}. {e}</>}));\r\n                addLines(h);\r\n                break;\r\n            default:\r\n                addLines([{ text: command, prefix: \">\", classes:\"text-success mt-2\" }]);                \r\n                addLines(commands(command));        \r\n                break;\r\n        }\r\n    }, [setOpen, history])\r\n\r\n    useEffect(() => {        \r\n        const handleEnter = event => {\r\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n              event.preventDefault();            \r\n              runCommand(inputRef.current.value);\r\n            }\r\n        };\r\n\r\n        isOpen && inputRef.current.focus();\r\n        isOpen ? document.body.classList.add('overflow-hidden') : document.body.classList.remove('overflow-hidden');\r\n        isOpen ? document.addEventListener(\"keydown\", handleEnter) : document.removeEventListener(\"keydown\", handleEnter);\r\n        \r\n        if(isOpen && !isInitialzed.current){ \r\n            runCommand(\"welcome\");\r\n            isInitialzed.current = true;\r\n        }\r\n\r\n        return () => document.removeEventListener(\"keydown\", handleEnter);\r\n    }, [isOpen, runCommand]);\r\n    \r\n    return (\r\n        <div ref={termRef} onClick={ () => inputRef.current.focus() } className={`mockup-code overflow-y-scroll fixed mx-4 sm:mx-16 my-16 transition-all inset-0 duration-250 ease-in-out origin-bottom-right ${isOpen ? 'scale-1 translate-y-0 translate-x-0' : 'scale-0 translate-y-8 translate-x-8'} shadow-lg`}>\r\n            {\r\n                lines.map( (line, index) => \r\n                    <pre className={ line.classes } key={index} data-prefix={line.prefix || \"\"}>\r\n                        <code className=\"inline-block whitespace-normal\tmax-w-full break-all pr-6\">{ line.text }</code>\r\n                    </pre>\r\n                )\r\n            }\r\n            <pre className=\"mt-4 mb-2\" data-prefix=\"$\">\r\n                <code className=\"inline-block whitespace-normal\tmax-w-full break-all pr-6\">\r\n                    <input aria-label=\"command prompt\" ref={ inputRef } className=\"input active:outline-transparent focus:outline-transparent bg-transparent border-none p-0 h-6 rounded-none\" type=\"text\" />\r\n                </code>\r\n            </pre>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Terminal;"],"names":["cmds","welcome","text","error","classes","help","command","options","isOpen","setOpen","inputRef","useRef","isInitialzed","termRef","useState","history","setHistory","lines","setLines","addLines","forEach","line","index","setTimeout","l","current","scrollBy","top","scrollHeight","behavior","runCommand","useCallback","value","h","prefix","e","i","push","commands","useEffect","handleEnter","event","code","preventDefault","focus","document","body","classList","add","remove","addEventListener","removeEventListener","ref","onClick","className","map","type"],"sourceRoot":""}