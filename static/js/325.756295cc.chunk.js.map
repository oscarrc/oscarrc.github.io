{"version":3,"file":"static/js/325.756295cc.chunk.js","mappings":"4MAIMA,EAAE,yCAAG,WAAOC,EAAaC,EAAKC,GAAzB,qFACDC,EADC,cACqB,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAAU,KAAMD,GAC/BG,EAAO,CACT,CAAEC,KAAK,0BACP,CAAEA,KAAK,oBACP,CAAEA,KAAK,gDACP,CAAEA,MAAM,yCAAO,kCAAP,2BAGNC,EATC,yCASU,yGACON,EAAYO,WAAW,CAAC,KAAMJ,IAAS,kBAAMK,EAAAA,EAAAA,IAAYC,EAAAA,EAAOC,KAAMD,EAAAA,EAAOE,KAAMR,EAA5C,IAD9C,cACPS,EADO,yBAENA,EAAMC,KAAI,SAAAC,GAAC,MAAK,CAACT,KAAMS,EAAEC,KAAd,KAFL,2CATV,qDAcHb,EAAQc,QAAWf,EAdhB,yCAc4BgB,EAAAA,EAAQJ,KAAI,SAAAK,GAAC,MAAK,CAACb,KAAMa,EAAZ,KAdzC,UAee,IAAnBhB,EAAQc,QAA+B,OAAfd,EAAQ,GAf5B,yCAegDE,GAfhD,YAgBJF,EAAQc,OAAS,GAAuB,QAAV,OAAPd,QAAO,IAAPA,OAAA,EAAAA,EAAU,KAAqC,OAAf,OAAPA,QAAO,IAAPA,GAAA,UAAAA,EAAU,UAAV,eAAe,KAhB3D,0CAkBC,CAAEG,KAAK,wBAAD,OAA0BH,EAAQiB,KAAK,MAAQC,QAAS,eAlB/D,OAmBIhB,IAnBJ,YAuBFH,IAAQC,EAAQc,QAAUC,EAAAA,EAAQI,SAASpB,IAC3CC,EAAQc,SAAWf,GAAOgB,EAAAA,EAAQI,SAASnB,EAAQ,KAxBjD,kCAyBQI,IAzBR,oDA4BHW,EAAAA,EAAQI,SAASnB,EAAQ,KAAQe,EAAAA,EAAQI,SAASpB,MAASC,IAAWD,GA5BnE,0CA6BI,CAAC,CAAEI,KAAK,gBAAD,OAAkBJ,GAAG,UAAOA,EAAP,MAArB,OAAqCC,EAAQiB,KAAK,MAAQC,QAAS,gBA7B9E,4CAAH,0DAiCR,W","sources":["components/terminal/ls.js"],"sourcesContent":["import config from \"../../config/github\";\r\nimport { getFileList } from \"../../lib/github\";\r\nimport folders from \"../../config/folders\";\r\n\r\nconst ls = async (queryClient, dir, options) => {    \r\n    const branch = `gh-${options?.[0] || dir}`;\r\n    const help = [\r\n        { text: `List available content`},\r\n        { text: `Usage: ls <path>`},\r\n        { text: `Valid paths are none, 'posts' and 'projects'`},\r\n        { text: <>Use '<em>ls -h</em>' to show this help</>}\r\n    ];\r\n\r\n    const getFiles = async () => {\r\n        const files = await queryClient.fetchQuery([\"ls\", branch], () => getFileList(config.user, config.repo, branch));\r\n        return files.map(f => ({text: f.name}));\r\n    }\r\n\r\n    if(!options.length && !dir) return folders.map(a => ({text: a}));\r\n    if(options.length === 1 && options[0] === \"-h\") return help;    \r\n    if(options.length > 1 || (options?.[0] !== \"-h\" && options?.[0]?.[0] === \"-\" )){\r\n        return [\r\n            { text: `Unrecoginized option ${options.join(\" \")}`, classes: \"text-error\" },\r\n            ...help\r\n        ]\r\n    }\r\n    if(\r\n        (dir && !options.length && folders.includes(dir)) ||\r\n        (options.length && !dir && folders.includes(options[0]))\r\n    ) return await getFiles();\r\n    \r\n    \r\n    if(!folders.includes(options[0]) || !folders.includes(dir) || (options && dir)){\r\n        return [{ text: `No such path ${dir && `${dir}/`}${options.join(\"/\")}`, classes: \"text-error\" }];\r\n    } \r\n}\r\n\r\nexport default ls;"],"names":["ls","queryClient","dir","options","branch","help","text","getFiles","fetchQuery","getFileList","config","user","repo","files","map","f","name","length","folders","a","join","classes","includes"],"sourceRoot":""}